@page
@using JamTeamFormingTool.Models;
@model JamTeamFormingTool.Pages.TeamFormingSessionDetailsModel

@{
    ViewData["Title"] = "View team forming session";
}

@if (Model.IsAdmin)
{
    <h1>Team forming session (admin view)</h1>
} else
{
    <h1>Team forming session</h1>
}

<div>
    <h4>@Model.JamTeamFormingSession.Name</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.JamTeamFormingSession.CreateTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.JamTeamFormingSession.CreateTime)
        </dd>
        <dt class="col-sm-2">
            Role template@(await Html.RenderComponentAsync<JamTeamFormingTool.Components.MoreInfo>(RenderMode.ServerPrerendered, new {
                cachedHelpMsg = "Role templates are criteria made for team forming sessions. Every team forming session is derived from a role template."
            }))
        </dt>
        <dd class="col-sm-10">
            <a asp-page="./RoleTemplateDetails" asp-route-name="@Model.RoleTemplateName">@Model.RoleTemplateName</a>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.JamTeamFormingSession.Info)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.JamTeamFormingSession.Info)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.JamTeamFormingSession.Phase)
        </dt>
        <dd class="col-sm-10">
            @if (Model.JamTeamFormingSession.Phase == Models.SessionPhase.Registration)
            {
                <span>Registration</span>
                @(await Html.RenderComponentAsync<JamTeamFormingTool.Components.MoreInfo>(RenderMode.ServerPrerendered, new
                {
                    cachedHelpMsg = "Actual matching has not taken place yet. Pre-made teams with open spots and individual team-seekers are to register and wait for the session to advance to the team forming phase."
                }))
            } else
            {
                <span>Team forming</span>
                @(await Html.RenderComponentAsync<JamTeamFormingTool.Components.MoreInfo>(RenderMode.ServerPrerendered, new
                {
                    cachedHelpMsg = "Teams and team seekers can now (through clicking Manage) view their matches that are ranked according to compatibility, as well as respond to match invites. Team seekers are taken off the registry as they settle on a match. Registration remains open."
                }))
            }
        </dd>
    </dl>
    @if (!Model.IsAdmin)
    {
        <div>
            @(await Html.RenderComponentAsync<JamTeamFormingTool.Components.TeamFormingSession.JoinSessionButton>(RenderMode.ServerPrerendered, new
            {
                Session = Model.JamTeamFormingSession,
                GenericPassCode = Model.GenericPassCode
            }))
        </div>
    }
</div>
@if (Model.IsAdmin)
{
    <div>
        @if (Model.JamTeamFormingSession.Phase == Models.SessionPhase.Registration)
        {
            @(await Html.RenderComponentAsync<JamTeamFormingTool.Components.TeamFormingSession.AdvanceButton>(RenderMode.ServerPrerendered, new { Session = Model.JamTeamFormingSession }))
            <br />
            <br />
        }
        @(await Html.RenderComponentAsync<JamTeamFormingTool.Components.TeamFormingSession.DeleteButton>(RenderMode.ServerPrerendered, new { Session = Model.JamTeamFormingSession }))
     </div>
}
<hr />
<div>
    <h5>Registered teams</h5>
        @if (Model.Teams.Count > 0)
        {
            <table class="table">
                <thead>
                    <tr>
                        <td>@Html.DisplayNameFor(model => model.Teams[0].Name)</td>
                        <td>Looking for</td>
                        <td>@Html.DisplayNameFor(model => model.Teams[0].Handle)</td>
                        <td>@Html.DisplayNameFor(model => model.Teams[0].Pitch)</td>
                        <td>@Html.DisplayNameFor(model => model.Teams[0].Region)</td>
                        <td></td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (Team team in Model.Teams)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => team.Name)</td>
                            <td>
                                @foreach (Role role in team.OpenRoles)
                                {
                                    <div>@role.Name</div>
                                }
                            </td>
                            <td>@Html.DisplayFor(modelItem => team.Handle)</td>
                            <td>@Html.DisplayFor(modelItem => team.Pitch)</td>
                            <td>
                                @if (team.Region != null)
                                {
                                    @Model.RegionMap[team.Region ?? Region.NAM_LATAM]
                                }
                            </td>
                            <td>
                                @if (Model.IsAdmin)
                                {
                                    @(await Html.RenderComponentAsync<JamTeamFormingTool.Components.TeamFormingSession.AdminDeleteParticipant>(RenderMode.ServerPrerendered, new
                                    {
                                        Session = Model.JamTeamFormingSession,
                                        AdminPassCode = Model.AdminPassCode,
                                        TeamID = team.ID,
                                        TeamName = team.Name
                                }))
                            } else
                            {
                                @(await Html.RenderComponentAsync<JamTeamFormingTool.Components.TeamFormingSession.ManageParticipantButton>(RenderMode.ServerPrerendered, new
                                {
                                    Session = Model.JamTeamFormingSession,
                                    GenericPassCode = Model.GenericPassCode,
                                    TeamID = team.ID
                                }))
                            }
                        </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        <h5>Registered team seekers</h5>
        @if (Model.Participants.Count > 0)
        {
            <table class="table">
                <thead>
                    <tr>
                        <td>@Html.DisplayNameFor(model => model.Participants[0].Name)</td>
                        <td>Can fill</td>
                        <td>@Html.DisplayNameFor(model => model.Participants[0].Handle)</td>
                        <td>@Html.DisplayNameFor(model => model.Participants[0].Portfolio)</td>
                        <td>@Html.DisplayNameFor(model => model.Participants[0].Region)</td>
                        <td></td>
                    </tr>
                </thead>
                <tbody>
                @foreach (Participant participant in Model.Participants)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => participant.Name)</td>
                        <td>
                            @foreach (Role role in participant.Roles)
                            {
                                <div>@role.Name</div>
                            }
                        </td>
                        <td>@Html.DisplayFor(modelItem => participant.Handle)</td>
                        <td>
                            @if (participant.Portfolio != null)
                            {
                                @Html.Raw(participant.Portfolio.Replace("\n", "<br />"))
                            }
                        </td>
                        <td>
                            @if (participant.Region != null)
                            {
                                @Model.RegionMap[participant.Region ?? Region.NAM_LATAM]
                            }
                        </td>
                        <td>
                            @if (Model.IsAdmin)
                            {
                                @(await Html.RenderComponentAsync<JamTeamFormingTool.Components.TeamFormingSession.AdminDeleteParticipant>(RenderMode.ServerPrerendered, new
                                {
                                    Session = Model.JamTeamFormingSession,
                                    AdminPassCode = Model.AdminPassCode,
                                    ParticipantID = participant.ID,
                                    ParticipantName = participant.Name
                                }))
                            } else
                            {
                                @(await Html.RenderComponentAsync<JamTeamFormingTool.Components.TeamFormingSession.ManageParticipantButton>(RenderMode.ServerPrerendered, new
                                {
                                    Session = Model.JamTeamFormingSession,
                                    GenericPassCode = Model.GenericPassCode,
                                    ParticipantID = participant.ID
                                }))
                            }
                        </td>
                    </tr>
                }
            </tbody>
            </table>
        }
</div>

<div>
    <a asp-page="./TeamFormingSessionIndex">Back to List</a>
</div>

<script src="_framework/blazor.server.js"></script>
