@page
@model JamTeamFormingTool.Pages.TeamManageModel

@{
    ViewData["Title"] = "Manage Team";
}

@(await Html.RenderComponentAsync<JamTeamFormingTool.Components.Participant.JoinSubmitModal>(RenderMode.ServerPrerendered, new
{
    HelpMsg = Model.HelpMsg,
    SubmitStatus = Model.SubmitStatus,
    SessionID = Model.SessionID,
    SessionPassCode = Model.SessionPassCode
}))

<h1>Manage team profile</h1>

<h4>@Model.Team.Name</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Team.ID" />
            <div class="form-group">
                <label asp-for="Team.Name" class="control-label"></label>
                <input asp-for="Team.Name" class="form-control" />
                <span asp-validation-for="Team.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Team.Handle" class="control-label"></label>
                @(await Html.RenderComponentAsync<JamTeamFormingTool.Components.MoreInfo>(RenderMode.ServerPrerendered, new
                {
                    cachedHelpMsg = "The contact for your team. E.g. Discord handle/ email/ etc."
                }))
                <input asp-for="Team.Handle" class="form-control" />
                <span asp-validation-for="Team.Handle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Team.Pitch" class="control-label"></label>
                @(await Html.RenderComponentAsync<JamTeamFormingTool.Components.MoreInfo>(RenderMode.ServerPrerendered, new
                {
                    cachedHelpMsg = "The general direction you plan to take the project."
                        + "\nThis can be as broad as it can be. Generally, you shouldn't have to be too specific before a game jam starts."
                }))<br />
                <small>Optional</small>
                <input asp-for="Team.Pitch" class="form-control" />
                <span asp-validation-for="Team.Pitch" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Team.Region" class="control-label"></label>
                <select asp-for="TempRegion" class="form-control">
                    @for (int i = 0; i < Model.RegionMapKeys.Length; i++)
                    {
                        @if (Model.RegionMap[Model.RegionMapKeys[i]] == Model.Team.Region)
                        {
                            <option value="@Model.RegionMapKeys[i]" selected>@Model.RegionMapKeys[i]</option>
                        }
                        else
                        {
                            <option value="@Model.RegionMapKeys[i]">@Model.RegionMapKeys[i]</option>
                        }
                    }
                </select>
                <span asp-validation-for="Team.Region" class="text-danger"></span>
            </div>
            <br />
            <div>
                <p>
                    <h5>Which roles are open in your team?</h5>
                </p>
                @for (int i = 0; i < Model.Roles.Length; i++)
                {
                    <p>
                        @if (Model.Roles[i].Description != null)
                        {
                            <input type="checkbox" asp-for="@Model.RoleCheckedStatuses[i]" class="form-check-input"> @Model.Roles[i].Name @(await Html.RenderComponentAsync<JamTeamFormingTool.Components.MoreInfo>(RenderMode.ServerPrerendered, new
                            {
                                cachedHelpMsg = Model.Roles[i].Description
                            }))
                        }
                        else
                        {
                            <input type="checkbox" asp-for="@Model.RoleCheckedStatuses[i]" class="form-check-input"> @Model.Roles[i].Name
                        }
                    </p>
                }
            </div>
            <input type="hidden" asp-for="@Model.SessionID" />
            <input type="hidden" asp-for="@Model.SessionPassCode" />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<br />

<div>
    @(await Html.RenderComponentAsync<JamTeamFormingTool.Components.Participant.WithdrawButton>(RenderMode.ServerPrerendered, new
    {
        SessionID = Model.SessionID,
        SessionPassCode = Model.SessionPassCode,
        TeamID = Model.Team.ID
    }))
</div>

<div>
    @if (Model.SessionPassCode != null)
    {
        <a asp-page="./TeamFormingSessionDetails" asp-route-id="@Model.SessionID" asp-route-passcode="@Model.SessionPassCode">Back to team forming session</a>
    } else
    {
        <a asp-page="./TeamFormingSessionDetails" asp-route-id="@Model.SessionID">Back to team forming session</a>
    }
</div>

<script src="_framework/blazor.server.js"></script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
