@page
@model JamTeamFormingTool.Pages.TeamSeekerManageModel

@{
    ViewData["Title"] = "Manage Team-Seeker Profile";
}

@(await Html.RenderComponentAsync<JamTeamFormingTool.Components.Participant.JoinSubmitModal>(RenderMode.ServerPrerendered, new
{
    HelpMsg = Model.HelpMsg,
    SubmitStatus = Model.SubmitStatus,
    SessionID = Model.SessionID,
    SessionPassCode = Model.SessionPassCode
}))

<h1>Manage team-seeker profile</h1>

@if (Model.CurrentSessionPhase == Models.SessionPhase.TeamForming)
{
    <p class="lead text-primary">Click on "Run the matching" to look for teams and team-seekers with the roles that are most compatible with your needs. Reach out privately to any matches using their handle if you're interested in joining up. Remember to delete this profile once you're no longer looking for a team. If you pair up with another team-seeker and there are still open slots in your team, feel free to register with this session again as a team.</p>
}

<h4>@Model.Participant.Name</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Participant.ID" />
            <div class="form-group">
                <label asp-for="Participant.Name" class="control-label"></label>
                <input asp-for="Participant.Name" class="form-control" />
                <span asp-validation-for="Participant.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Participant.Handle" class="control-label"></label>
                @(await Html.RenderComponentAsync<JamTeamFormingTool.Components.MoreInfo>(RenderMode.ServerPrerendered, new
                {
                    cachedHelpMsg = "Your contact. E.g. Discord handle/ email/ etc."
                }))
                <input asp-for="Participant.Handle" class="form-control" />
                <span asp-validation-for="Participant.Handle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Participant.Portfolio" class="control-label"></label>
                @(await Html.RenderComponentAsync<JamTeamFormingTool.Components.MoreInfo>(RenderMode.ServerPrerendered, new
                {
                    cachedHelpMsg = "Links to your previous works. E.g. art, music, games, writing, code."
                }))<br />
                <small>Optional</small>
                <textarea asp-for="Participant.Portfolio" class="form-control"></textarea>
                <span asp-validation-for="Participant.Portfolio" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Participant.Region" class="control-label"></label>
                <select asp-for="TempRegion" class="form-control">
                    @for (int i = 0; i < Model.RegionMapKeys.Length; i++)
                    {
                        @if (Model.RegionMap[Model.RegionMapKeys[i]] == Model.Participant.Region)
                        {
                            <option value="@Model.RegionMapKeys[i]" selected>@Model.RegionMapKeys[i]</option>
                        }
                        else
                        {
                            <option value="@Model.RegionMapKeys[i]">@Model.RegionMapKeys[i]</option>
                        }
                    }
                </select>
                <span asp-validation-for="Participant.Region" class="text-danger"></span>
            </div>
            <br />
            <div>
                <p>
                    <h5>Which roles can you take on?</h5>
                </p>
                @for (int i = 0; i < Model.Roles.Length; i++)
                {
                    <p>
                        @if (Model.Roles[i].Description != null)
                        {
                            <input type="checkbox" asp-for="@Model.RoleCheckedStatuses[i]" class="form-check-input"> @Model.Roles[i].Name @(await Html.RenderComponentAsync<JamTeamFormingTool.Components.MoreInfo>(RenderMode.ServerPrerendered, new
                            {
                                cachedHelpMsg = Model.Roles[i].Description
                            }))
                        }
                        else
                        {
                            <input type="checkbox" asp-for="@Model.RoleCheckedStatuses[i]" class="form-check-input"> @Model.Roles[i].Name
                        }
                    </p>
                }
            </div>
            <input type="hidden" asp-for="@Model.SessionID" />
            <input type="hidden" asp-for="@Model.SessionPassCode" />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<br />

<div>
    @(await Html.RenderComponentAsync<JamTeamFormingTool.Components.Participant.WithdrawButton>(RenderMode.ServerPrerendered, new
    {
        SessionID = Model.SessionID,
        SessionPassCode = Model.SessionPassCode,
        ParticipantID = Model.Participant.ID
    }))
</div>

@if (Model.CurrentSessionPhase == Models.SessionPhase.TeamForming)
{
    <br />
    <hr />
    @(await Html.RenderComponentAsync<JamTeamFormingTool.Components.Participant.Matches>(RenderMode.ServerPrerendered, new
    {
        ParticipantID = Model.Participant.ID,
        SessionID = Model.SessionID,
    }))
    <hr />
}


<div>
    @if (Model.SessionPassCode != null)
    {
        <a asp-page="./TeamFormingSessionDetails" asp-route-id="@Model.SessionID" asp-route-passcode="@Model.SessionPassCode">Back to team forming session</a>
    } else
    {
        <a asp-page="./TeamFormingSessionDetails" asp-route-id="@Model.SessionID">Back to team forming session</a>
    }
</div>

<script src="_framework/blazor.server.js"></script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
